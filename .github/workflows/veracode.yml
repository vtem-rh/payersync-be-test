name: Veracode Pipeline Scan

on:
  schedule:
    - cron: '46 2 1 * *'

  workflow_dispatch:
    inputs:
      severity:
        description: 'Veracode severity to fail on'
        default: "VeryHigh,High"
        type: string
    secrets:
      VERACODE_API_ID:
        required: true
      VERACODE_API_KEY:
        required: true

jobs:
  pipeline_scan:
    name: Pipeline Scan
    runs-on: ubuntu-latest
    env:
      ASSET_NAME: 'payersync-onboarder-backend.zip'
    steps:
      - name: Check out branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - name: Prepare files to scan
        id: create-artifact
        run: |
          zip -9 -r "${{ env.ASSET_NAME }}" .
          echo "asset_name=${{ env.ASSET_NAME }}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET_NAME }}
          path: .
          compression-level: 9
          overwrite: true

      - name: Download Veracode CLI
        run: |
          curl -sSL https://downloads.veracode.com/securityscan/veracode-cli.zip -o veracode-cli.zip
          unzip veracode-cli.zip
          chmod +x veracode-cli

      - name: Run Veracode Pipeline Scan
        run: |
          ./veracode-cli pipeline-scan \
            --veracode-api-id "${{ secrets.VERACODE_API_ID }}" \
            --veracode-api-key "${{ secrets.VERACODE_API_KEY }}" \
            --app-name "payersync-onboarder-backend" \
            --file "${{ env.ASSET_NAME }}" \
            --fail-on-severity "${{ inputs.severity || 'VeryHigh,High' }}"

      - name: Cleanup
        if: always()
        run: |
          rm -f veracode-cli.zip
          rm -f veracode-cli
          rm -f "${{ env.ASSET_NAME }}"
